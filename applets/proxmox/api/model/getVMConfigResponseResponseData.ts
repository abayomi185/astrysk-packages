/**
 * Generated by orval v6.17.0 üç∫
 * Do not edit manually.
 * ProxMox VE API
 * ProxMox VE API
 * OpenAPI spec version: 2.0
 */

/**
 * The VM configuration.
 */
export type GetVMConfigResponseResponseData = {
  /** Enable/disable ACPI. */
  acpi?: number;
  /** Enable/disable Qemu GuestAgent and its properties. */
  agent?: string;
  /** Virtual processor architecture. Defaults to the host. */
  arch?: string;
  /** Arbitrary arguments passed to kvm. */
  args?: string;
  /** Configure a audio device, useful in combination with QXL/Spice. */
  audio0?: string;
  /** Automatic restart after crash (currently ignored). */
  autostart?: number;
  /** Amount of target RAM for the VM in MB. Using zero disables the ballon driver. */
  balloon?: number;
  /** Select BIOS implementation. */
  bios?: string;
  /** Specify guest boot order. Use with 'order=', usage with no key or 'legacy=' is deprecated. */
  boot?: string;
  /** Enable booting from specified disk. Deprecated: Use 'boot: order=foo;bar' instead. */
  bootdisk?: string;
  /** This is an alias for option -ide2 */
  cdrom?: string;
  /** cloud-init: Specify custom files to replace the automatically generated ones at start. */
  cicustom?: string;
  /** cloud-init: Password to assign the user. Using this is generally not recommended. Use ssh keys instead. Also note that older cloud-init versions do not support hashed passwords. */
  cipassword?: string;
  /** Specifies the cloud-init configuration format. The default depends on the configured operating system type (`ostype`. We use the `nocloud` format for Linux, and `configdrive2` for windows. */
  citype?: string;
  /** cloud-init: User name to change ssh keys and password for instead of the image's configured default user. */
  ciuser?: string;
  /** The number of cores per socket. */
  cores?: number;
  /** Emulated CPU type. */
  cpu?: string;
  /** Limit of CPU usage. */
  cpulimit?: number;
  /** CPU weight for a VM. */
  cpuunits?: number;
  /** Description for the VM. Only used on the configuration web interface. This is saved as comment inside the configuration file. */
  description?: string;
  /** SHA1 digest of configuration file. This can be used to prevent concurrent modifications. */
  digest?: string;
  /** Configure a Disk for storing EFI vars */
  efidisk0?: string;
  /** Freeze CPU at startup (use 'c' monitor command to start execution). */
  freeze?: number;
  /** Script that will be executed during various steps in the vms lifetime. */
  hookscript?: string;
  /** Map host PCI devices into guest. */
  hostpci0?: string;
  /** Map host PCI devices into guest. */
  hostpci1?: string;
  /** Map host PCI devices into guest. */
  hostpci2?: string;
  /** Map host PCI devices into guest. */
  hostpci3?: string;
  /** Map host PCI devices into guest. */
  hostpci4?: string;
  /** Map host PCI devices into guest. */
  hostpci5?: string;
  /** Map host PCI devices into guest. */
  hostpci6?: string;
  /** Map host PCI devices into guest. */
  hostpci7?: string;
  /** Map host PCI devices into guest. */
  hostpci8?: string;
  /** Map host PCI devices into guest. */
  hostpci9?: string;
  /** Map host PCI devices into guest. */
  hostpci10?: string;
  /** Map host PCI devices into guest. */
  hostpci11?: string;
  /** Map host PCI devices into guest. */
  hostpci12?: string;
  /** Map host PCI devices into guest. */
  hostpci13?: string;
  /** Map host PCI devices into guest. */
  hostpci14?: string;
  /** Map host PCI devices into guest. */
  hostpci15?: string;
  /** Map host PCI devices into guest. */
  hostpci16?: string;
  /** Map host PCI devices into guest. */
  hostpci17?: string;
  /** Map host PCI devices into guest. */
  hostpci18?: string;
  /** Map host PCI devices into guest. */
  hostpci19?: string;
  /** Map host PCI devices into guest. */
  hostpci20?: string;
  /** Map host PCI devices into guest. */
  hostpci21?: string;
  /** Map host PCI devices into guest. */
  hostpci22?: string;
  /** Map host PCI devices into guest. */
  hostpci23?: string;
  /** Map host PCI devices into guest. */
  hostpci24?: string;
  /** Map host PCI devices into guest. */
  hostpci25?: string;
  /** Map host PCI devices into guest. */
  hostpci26?: string;
  /** Map host PCI devices into guest. */
  hostpci27?: string;
  /** Map host PCI devices into guest. */
  hostpci28?: string;
  /** Map host PCI devices into guest. */
  hostpci29?: string;
  /** Selectively enable hotplug features. This is a comma separated list of hotplug features: 'network', 'disk', 'cpu', 'memory' and 'usb'. Use '0' to disable hotplug completely. Value '1' is an alias for the default 'network,disk,usb'. */
  hotplug?: string;
  /** Enable/disable hugepages memory. */
  hugepages?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide0?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide1?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide2?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide3?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide4?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide5?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide6?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide7?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide8?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide9?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide10?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide11?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide12?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide13?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide14?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide15?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide16?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide17?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide18?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide19?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide20?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide21?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide22?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide23?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide24?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide25?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide26?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide27?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide28?: string;
  /** Use volume as IDE hard disk or CD-ROM (n is 0 to 3). */
  ide29?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig0?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig1?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig2?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig3?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig4?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig5?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig6?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig7?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig8?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig9?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig10?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig11?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig12?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig13?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig14?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig15?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig16?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig17?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig18?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig19?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig20?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig21?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig22?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig23?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig24?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig25?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig26?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig27?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig28?: string;
  /** cloud-init: Specify IP addresses and gateways for the corresponding interface.

IP addresses use CIDR notation, gateways are optional but need an IP of the same type specified.

The special string 'dhcp' can be used for IP addresses to use DHCP, in which case no explicit
gateway should be provided.
For IPv6 the special string 'auto' can be used to use stateless autoconfiguration.

If cloud-init is enabled and neither an IPv4 nor an IPv6 address is specified, it defaults to using
dhcp on IPv4.
 */
  ipconfig29?: string;
  /** Inter-VM shared memory. Useful for direct communication between VMs, or to the host. */
  ivshmem?: string;
  /** Use together with hugepages. If enabled, hugepages will not not be deleted after VM shutdown and can be used for subsequent starts. */
  keephugepages?: number;
  /** Keybord layout for vnc server. Default is read from the '/etc/pve/datacenter.cfg' configuration file.It should not be necessary to set it. */
  keyboard?: string;
  /** Enable/disable KVM hardware virtualization. */
  kvm?: number;
  /** Set the real time clock to local time. This is enabled by default if ostype indicates a Microsoft OS. */
  localtime?: number;
  /** Lock/unlock the VM. */
  lock?: string;
  /** Specifies the Qemu machine type. */
  machine?: string;
  /** Amount of RAM for the VM in MB. This is the maximum available memory when you use the balloon device. */
  memory?: number;
  /** Set maximum tolerated downtime (in seconds) for migrations. */
  migrate_downtime?: number;
  /** Set maximum speed (in MB/s) for migrations. Value 0 is no limit. */
  migrate_speed?: number;
  /** Set a name for the VM. Only used on the configuration web interface. */
  name?: string;
  /** cloud-init: Sets DNS server IP address for a container. Create will'
	    .' automatically use the setting from the host if neither searchdomain nor nameserver'
	    .' are set. */
  nameserver?: string;
  /** Specify network devices. */
  net0?: string;
  /** Specify network devices. */
  net1?: string;
  /** Specify network devices. */
  net2?: string;
  /** Specify network devices. */
  net3?: string;
  /** Specify network devices. */
  net4?: string;
  /** Specify network devices. */
  net5?: string;
  /** Specify network devices. */
  net6?: string;
  /** Specify network devices. */
  net7?: string;
  /** Specify network devices. */
  net8?: string;
  /** Specify network devices. */
  net9?: string;
  /** Specify network devices. */
  net10?: string;
  /** Specify network devices. */
  net11?: string;
  /** Specify network devices. */
  net12?: string;
  /** Specify network devices. */
  net13?: string;
  /** Specify network devices. */
  net14?: string;
  /** Specify network devices. */
  net15?: string;
  /** Specify network devices. */
  net16?: string;
  /** Specify network devices. */
  net17?: string;
  /** Specify network devices. */
  net18?: string;
  /** Specify network devices. */
  net19?: string;
  /** Specify network devices. */
  net20?: string;
  /** Specify network devices. */
  net21?: string;
  /** Specify network devices. */
  net22?: string;
  /** Specify network devices. */
  net23?: string;
  /** Specify network devices. */
  net24?: string;
  /** Specify network devices. */
  net25?: string;
  /** Specify network devices. */
  net26?: string;
  /** Specify network devices. */
  net27?: string;
  /** Specify network devices. */
  net28?: string;
  /** Specify network devices. */
  net29?: string;
  /** Enable/disable NUMA. */
  numa?: number;
  /** NUMA topology. */
  numa0?: string;
  /** NUMA topology. */
  numa1?: string;
  /** NUMA topology. */
  numa2?: string;
  /** NUMA topology. */
  numa3?: string;
  /** NUMA topology. */
  numa4?: string;
  /** NUMA topology. */
  numa5?: string;
  /** NUMA topology. */
  numa6?: string;
  /** NUMA topology. */
  numa7?: string;
  /** NUMA topology. */
  numa8?: string;
  /** NUMA topology. */
  numa9?: string;
  /** NUMA topology. */
  numa10?: string;
  /** NUMA topology. */
  numa11?: string;
  /** NUMA topology. */
  numa12?: string;
  /** NUMA topology. */
  numa13?: string;
  /** NUMA topology. */
  numa14?: string;
  /** NUMA topology. */
  numa15?: string;
  /** NUMA topology. */
  numa16?: string;
  /** NUMA topology. */
  numa17?: string;
  /** NUMA topology. */
  numa18?: string;
  /** NUMA topology. */
  numa19?: string;
  /** NUMA topology. */
  numa20?: string;
  /** NUMA topology. */
  numa21?: string;
  /** NUMA topology. */
  numa22?: string;
  /** NUMA topology. */
  numa23?: string;
  /** NUMA topology. */
  numa24?: string;
  /** NUMA topology. */
  numa25?: string;
  /** NUMA topology. */
  numa26?: string;
  /** NUMA topology. */
  numa27?: string;
  /** NUMA topology. */
  numa28?: string;
  /** NUMA topology. */
  numa29?: string;
  /** Specifies whether a VM will be started during system bootup. */
  onboot?: number;
  /** Specify guest operating system. */
  ostype?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel0?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel1?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel2?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel3?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel4?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel5?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel6?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel7?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel8?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel9?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel10?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel11?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel12?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel13?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel14?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel15?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel16?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel17?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel18?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel19?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel20?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel21?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel22?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel23?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel24?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel25?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel26?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel27?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel28?: string;
  /** Map host parallel devices (n is 0 to 2). */
  parallel29?: string;
  /** Sets the protection flag of the VM. This will disable the remove VM and remove disk operations. */
  protection?: number;
  /** Allow reboot. If set to '0' the VM exit on reboot. */
  reboot?: number;
  /** Configure a VirtIO-based Random Number Generator. */
  rng0?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata0?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata1?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata2?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata3?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata4?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata5?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata6?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata7?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata8?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata9?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata10?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata11?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata12?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata13?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata14?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata15?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata16?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata17?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata18?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata19?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata20?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata21?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata22?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata23?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata24?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata25?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata26?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata27?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata28?: string;
  /** Use volume as SATA hard disk or CD-ROM (n is 0 to 5). */
  sata29?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi0?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi1?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi2?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi3?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi4?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi5?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi6?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi7?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi8?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi9?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi10?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi11?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi12?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi13?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi14?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi15?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi16?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi17?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi18?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi19?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi20?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi21?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi22?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi23?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi24?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi25?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi26?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi27?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi28?: string;
  /** Use volume as SCSI hard disk or CD-ROM (n is 0 to 30). */
  scsi29?: string;
  /** SCSI controller model */
  scsihw?: string;
  /** cloud-init: Sets DNS search domains for a container. Create will'
	    .' automatically use the setting from the host if neither searchdomain nor nameserver'
	    .' are set. */
  searchdomain?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial0?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial1?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial2?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial3?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial4?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial5?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial6?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial7?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial8?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial9?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial10?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial11?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial12?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial13?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial14?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial15?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial16?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial17?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial18?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial19?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial20?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial21?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial22?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial23?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial24?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial25?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial26?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial27?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial28?: string;
  /** Create a serial device inside the VM (n is 0 to 3) */
  serial29?: string;
  /** Amount of memory shares for auto-ballooning. The larger the number is, the more memory this VM gets. Number is relative to weights of all other running VMs. Using zero disables auto-ballooning. Auto-ballooning is done by pvestatd. */
  shares?: number;
  /** Specify SMBIOS type 1 fields. */
  smbios1?: string;
  /** The number of CPUs. Please use option -sockets instead. */
  smp?: number;
  /** The number of CPU sockets. */
  sockets?: number;
  /** Configure additional enhancements for SPICE. */
  spice_enhancements?: string;
  /** cloud-init: Setup public SSH keys (one key per line, OpenSSH format). */
  sshkeys?: string;
  /** Set the initial date of the real time clock. Valid format for date are:'now' or '2006-06-17T16:01:21' or '2006-06-17'. */
  startdate?: string;
  /** Startup and shutdown behavior. Order is a non-negative number defining the general startup order. Shutdown in done with reverse ordering. Additionally you can set the 'up' or 'down' delay in seconds, which specifies a delay to wait before the next VM is started or stopped. */
  startup?: string;
  /** Enable/disable the USB tablet device. */
  tablet?: number;
  /** Tags of the VM. This is only meta information. */
  tags?: string;
  /** Enable/disable time drift fix. */
  tdf?: number;
  /** Enable/disable Template. */
  template?: number;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused0?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused1?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused2?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused3?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused4?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused5?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused6?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused7?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused8?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused9?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused10?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused11?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused12?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused13?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused14?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused15?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused16?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused17?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused18?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused19?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused20?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused21?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused22?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused23?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused24?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused25?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused26?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused27?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused28?: string;
  /** Reference to unused volumes. This is used internally, and should not be modified manually. */
  unused29?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb0?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb1?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb2?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb3?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb4?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb5?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb6?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb7?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb8?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb9?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb10?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb11?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb12?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb13?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb14?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb15?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb16?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb17?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb18?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb19?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb20?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb21?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb22?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb23?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb24?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb25?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb26?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb27?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb28?: string;
  /** Configure an USB device (n is 0 to 4). */
  usb29?: string;
  /** Number of hotplugged vcpus. */
  vcpus?: number;
  /** Configure the VGA hardware. */
  vga?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio0?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio1?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio2?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio3?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio4?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio5?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio6?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio7?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio8?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio9?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio10?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio11?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio12?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio13?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio14?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio15?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio16?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio17?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio18?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio19?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio20?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio21?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio22?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio23?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio24?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio25?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio26?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio27?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio28?: string;
  /** Use volume as VIRTIO hard disk (n is 0 to 15). */
  virtio29?: string;
  /** Set VM Generation ID. Use '1' to autogenerate on create or update, pass '0' to disable explicitly. */
  vmgenid?: string;
  /** Default storage for VM state volumes/files. */
  vmstatestorage?: string;
  /** Create a virtual hardware watchdog device. */
  watchdog?: string;
};
