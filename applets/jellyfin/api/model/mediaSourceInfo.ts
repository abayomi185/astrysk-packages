/**
 * Generated by orval v7.2.0 üç∫
 * Do not edit manually.
 * Jellyfin API
 * OpenAPI spec version: 10.8.8
 */
import type { MediaSourceInfoEncoderProtocol } from "./mediaSourceInfoEncoderProtocol";
import type { MediaSourceInfoIsoType } from "./mediaSourceInfoIsoType";
import type { MediaAttachment } from "./mediaAttachment";
import type { MediaStream } from "./mediaStream";
import type { MediaProtocol } from "./mediaProtocol";
import type { MediaSourceInfoRequiredHttpHeaders } from "./mediaSourceInfoRequiredHttpHeaders";
import type { MediaSourceInfoTimestamp } from "./mediaSourceInfoTimestamp";
import type { MediaSourceType } from "./mediaSourceType";
import type { MediaSourceInfoVideo3DFormat } from "./mediaSourceInfoVideo3DFormat";
import type { MediaSourceInfoVideoType } from "./mediaSourceInfoVideoType";

export interface MediaSourceInfo {
  /** @nullable */
  AnalyzeDurationMs?: number | null;
  /** @nullable */
  Bitrate?: number | null;
  /** @nullable */
  BufferMs?: number | null;
  /** @nullable */
  Container?: string | null;
  /** @nullable */
  DefaultAudioStreamIndex?: number | null;
  /** @nullable */
  DefaultSubtitleStreamIndex?: number | null;
  /** @nullable */
  EncoderPath?: string | null;
  /** @nullable */
  EncoderProtocol?: MediaSourceInfoEncoderProtocol;
  /** @nullable */
  ETag?: string | null;
  /** @nullable */
  Formats?: string[] | null;
  GenPtsInput?: boolean;
  /** @nullable */
  Id?: string | null;
  IgnoreDts?: boolean;
  IgnoreIndex?: boolean;
  IsInfiniteStream?: boolean;
  /** @nullable */
  IsoType?: MediaSourceInfoIsoType;
  /** Gets or sets a value indicating whether the media is remote.
Differentiate internet url vs local network. */
  IsRemote?: boolean;
  /** @nullable */
  LiveStreamId?: string | null;
  /** @nullable */
  MediaAttachments?: MediaAttachment[] | null;
  /** @nullable */
  MediaStreams?: MediaStream[] | null;
  /** @nullable */
  Name?: string | null;
  /** @nullable */
  OpenToken?: string | null;
  /** @nullable */
  Path?: string | null;
  Protocol?: MediaProtocol;
  ReadAtNativeFramerate?: boolean;
  /** @nullable */
  RequiredHttpHeaders?: MediaSourceInfoRequiredHttpHeaders;
  RequiresClosing?: boolean;
  RequiresLooping?: boolean;
  RequiresOpening?: boolean;
  /** @nullable */
  RunTimeTicks?: number | null;
  /** @nullable */
  Size?: number | null;
  SupportsDirectPlay?: boolean;
  SupportsDirectStream?: boolean;
  SupportsProbing?: boolean;
  SupportsTranscoding?: boolean;
  /** @nullable */
  Timestamp?: MediaSourceInfoTimestamp;
  /** @nullable */
  TranscodingContainer?: string | null;
  /** @nullable */
  TranscodingSubProtocol?: string | null;
  /** @nullable */
  TranscodingUrl?: string | null;
  Type?: MediaSourceType;
  /** @nullable */
  Video3DFormat?: MediaSourceInfoVideo3DFormat;
  /** @nullable */
  VideoType?: MediaSourceInfoVideoType;
}
